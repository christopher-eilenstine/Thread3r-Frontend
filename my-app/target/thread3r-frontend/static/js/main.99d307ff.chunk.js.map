{"version":3,"sources":["services/auth.service.js","components/Login.js","components/Register.js","services/auth-header.js","services/group-api.js","components/Home.js","components/Profile.js","components/GroupSearch.js","components/Group.js","components/Thread.js","components/CreateGroup.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","toExport","register","username","email","password","axios","post","login","then","response","data","token","localStorage","setItem","JSON","stringify","logout","removeItem","getCurrentUser","parse","getItem","required","value","className","role","Login","props","form","useRef","checkBtn","useState","setUsername","setPassword","loading","setLoading","message","setMessage","src","alt","onSubmit","e","preventDefault","current","validateAll","context","_errors","length","AuthService","history","push","window","location","reload","error","resMessage","toString","ref","htmlFor","type","name","onChange","target","validations","disabled","style","display","validEmail","isEmail","vusername","vpassword","Register","setEmail","verifyPassword","setVerifyPassword","successful","setSuccessful","authHeader","user","Authorization","getCreatedGroups","a","get","headers","getCreatedThreads","getCreatedComments","getSubscribed","userId","getGroup","groupId","searchGroups","searchToken","getAllGroups","getAllThreads","getGroupThreads","postThread","title","content","getThread","threadId","getComments","postComment","Subscribe","unSubscribe","createGroup","description","Home","allThreads","setAllThreads","useEffect","GroupAPI","responseJson","sort","b","date1","Date","created","getTime","catch","console","map","item","gutter","span","extra","to","group","bordered","id","TabPane","Tabs","Profile","currentUser","groups","setGroups","threads","setThreads","comments","setComments","toUpperCase","tab","size","actions","thread","author","creator","datetime","Search","Input","GroupSearch","search","setSearch","allGroups","setAllGroups","filteredGroups","setFilteredGroups","subscribedGroups","setSubscribedGroups","key","placeholder","onSearch","newData","filter","itemData","textData","indexOf","log","onClick","layout","labelCol","wrapperCol","tailLayout","offset","GroupPage","refreshPage","setGroup","groupThreads","setGroupThreads","match","params","isModalVisible","setIsModalVisible","handleCancel","visible","onOk","onCancel","allowClear","footer","initialValues","remember","onFinish","values","ThreadTitle","ThreadContent","onFinishFailed","errorInfo","Item","label","rules","htmlType","ThreadPage","setThread","threadComments","setThreadComments","enterButton","CreateGroup","setName","setDescription","App","undefined","setCurrentUser","exact","path","component","render","Thread","Boolean","hostname","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.99d307ff.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst API_URL = \"http://csci4830.ddns.net:8080/thread3r-backend/api/auth/\";\n\nconst register = (username, email, password) => {\n  return axios.post(API_URL + \"register\", {\n    username,\n    email,\n    password,\n  });\n};\n\nconst login = (username, password) => {\n  return axios\n    .post(API_URL + \"login\", {\n      username,\n      password,\n    })\n    .then((response) => {\n      if (response.data.token) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n\n      return response.data;\n    });\n};\n\nconst logout = () => {\n  localStorage.removeItem(\"user\");\n};\n\nconst getCurrentUser = () => {\n  return JSON.parse(localStorage.getItem('user'));\n};\n\nvar toExport = {\n  register,\n  login, \n  logout,\n  getCurrentUser,\n};\n\nexport default toExport;\n","import React, { useState, useRef } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport \"./LoginAndRegister.css\";\n\nimport AuthService from \"../services/auth.service\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst Login = (props) => {\n  const form = useRef();\n  const checkBtn = useRef();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const onChangeUsername = (e) => {\n    const username = e.target.value;\n    setUsername(username);\n  };\n\n  const onChangePassword = (e) => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n\n    setMessage(\"\");\n    setLoading(true);\n\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0) {\n      AuthService.login(username, password).then(\n        () => {\n          props.history.push(\"/profile\");\n          window.location.reload();\n        },\n        (error) => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          setLoading(false);\n          setMessage(resMessage);\n        }\n      );\n    } else {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"col-md-12\">\n      <div className=\"card card-container\">\n        <img\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n          alt=\"profile-img\"\n          className=\"profile-img-card\"\n        />\n\n        <Form onSubmit={handleLogin} ref={form}>\n          <div className=\"form-group\">\n            <label htmlFor=\"username\">Username</label>\n            <Input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"username\"\n              value={username}\n              onChange={onChangeUsername}\n              validations={[required]}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password</label>\n            <Input\n              type=\"password\"\n              className=\"form-control\"\n              name=\"password\"\n              value={password}\n              onChange={onChangePassword}\n              validations={[required]}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <button className=\"btn btn-primary btn-block\" disabled={loading}>\n              {loading && (\n                <span className=\"spinner-border spinner-border-sm\"></span>\n              )}\n              <span>Login</span>\n            </button>\n          </div>\n\n          {message && (\n            <div className=\"form-group\">\n              <div className=\"alert alert-danger\" role=\"alert\">\n                {message}\n              </div>\n            </div>\n          )}\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;","import React, { useState, useRef } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\nimport \"./LoginAndRegister.css\";\n\nimport AuthService from \"../services/auth.service\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst validEmail = (value) => {\n  if (!isEmail(value)) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This is not a valid email.\n      </div>\n    );\n  }\n};\n\nconst vusername = (value) => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The username must be between 3 and 20 characters.\n      </div>\n    );\n  }\n};\n\nconst vpassword = (value) => {\n  if (value.length < 6 || value.length > 40) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The password must be between 6 and 40 characters.\n      </div>\n    );\n  }\n};\n\n// const samepassword = (value, verifyPassword) => {\n//   if (value != verifyPassword) {\n//     return (\n//       <div className=\"alert alert-danger\" role=\"alert\">\n//         These passwords do not match!\n//       </div>\n//     );\n//   }\n// };\n\nconst Register = (props) => {\n  const form = useRef();\n  const checkBtn = useRef();\n\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [verifyPassword, setVerifyPassword] = useState(\"\");\n  const [successful, setSuccessful] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const onChangeUsername = (e) => {\n    const username = e.target.value;\n    setUsername(username);\n  };\n\n  const onChangeEmail = (e) => {\n    const email = e.target.value;\n    setEmail(email);\n  };\n\n  const onChangePassword = (e) => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const onChangeVerifyPassword = (e) => {\n    const verifyPassword = e.target.value;\n    setVerifyPassword(verifyPassword);\n  };\n  \n\n  const handleRegister = (e) => {\n    e.preventDefault();\n\n    setMessage(\"\");\n    setSuccessful(false);\n\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0) {\n      if(password !== verifyPassword){\n        setMessage(\"The passwords do not match\");\n        setSuccessful(false);\n      }\n      else{\n      AuthService.register(username, email, password).then(\n        (response) => {\n          setMessage(response.data.message);\n          setSuccessful(true);\n        },\n        (error) => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          setMessage(resMessage);\n          setSuccessful(false);\n        }\n      );\n    }\n  }\n  };\n\n  return (\n    <div className=\"col-md-12\">\n      <div className=\"card card-container\">\n        <img\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n          alt=\"profile-img\"\n          className=\"profile-img-card\"\n        />\n\n        <Form onSubmit={handleRegister} ref={form}>\n          {!successful && (\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"username\">Username</label>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"username\"\n                  value={username}\n                  onChange={onChangeUsername}\n                  validations={[required, vusername]}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"email\">Email</label>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"email\"\n                  value={email}\n                  onChange={onChangeEmail}\n                  validations={[required, validEmail]}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"password\">Password</label>\n                <Input\n                  type=\"password\"\n                  className=\"form-control\"\n                  name=\"password\"\n                  value={password}\n                  onChange={onChangePassword}\n                  validations={[required, vpassword]}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"verifypassword\">Verify Password</label>\n                <Input\n                  type=\"password\"\n                  className=\"form-control\"\n                  name=\"verifyPassword\"\n                  value={verifyPassword}\n                  onChange={onChangeVerifyPassword}\n                  // validations={[required, samepassword(password, verifyPassword)]}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <button className=\"btn btn-primary btn-block\">Sign Up</button>\n              </div>\n            </div>\n          )}\n\n          {message && (\n            <div className=\"form-group\">\n              <div\n                className={ successful ? \"alert alert-success\" : \"alert alert-danger\" }\n                role=\"alert\"\n              >\n                {message}\n              </div>\n            </div>\n          )}\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n","export default function authHeader() {\n    const user = JSON.parse(localStorage.getItem('user'));\n  \n    if (user && user.token) {\n      return { Authorization: 'Bearer ' + user.token };\n    } else {\n      return {};\n    }\n  }\n  ","import axios from \"axios\";\nimport authHeader from \"./auth-header\";\n\nconst API_URL = \"http://csci4830.ddns.net:8080/thread3r-backend/api/groups/\";\n\nconst getCreatedGroups = async () => {\n  const response = await axios.get(API_URL + \"created\", {headers: authHeader()});\n  return response.data;\n};\n\nconst getCreatedThreads = async () => {\n  const response = await axios.get(API_URL + \"threads/created\", {headers: authHeader()});\n  return response.data;\n};\n\nconst getCreatedComments = async () => {\n  const response = await axios.get(API_URL + \"threads/comments/created\", {headers: authHeader()});\n  return response.data;\n};\n\nconst getSubscribed = async (userId) => {\n    const response = await axios\n    .get(API_URL + \"subscribed\", {\n      userId,\n      headers: authHeader()\n    });\n  return response.data;\n  };\n\n  const getGroup = async (groupId) => {\n    const response = await axios\n    .get(API_URL + groupId, {\n      headers: authHeader()\n    });\n    return response.data;\n  }\n\n  const searchGroups = async (searchToken) => {\n      const response = await axios\n      .get(API_URL + \"search?name=\", {\n        searchToken,\n        headers: authHeader(),\n      });\n    return response.data;\n  }\n\n  const getAllGroups = async () => {\n    const response = await axios\n      .get(API_URL, {\n        headers: authHeader()\n      });\n    return response.data;\n  }\n\n  const getAllThreads = async () => {\n    const response = await axios\n    .get(API_URL + \"threads\", {\n      headers: authHeader()\n    });\n  return response.data;\n  }\n\n  const getGroupThreads = async (groupId) => {\n    const response = await axios\n    .get(API_URL + groupId + \"/threads\", {\n      headers: authHeader()\n    });\n  return response.data;\n  }\n\n  const postThread = async (groupId, title, content) => {\n    const response = await axios\n    .post(API_URL + groupId + \"/threads\", {\"title\": title, \"content\": content}, {\n      headers: authHeader()\n    });\n    return response.data;\n  }\n\n  const getThread = async (groupId, threadId) => {\n    const response = await axios\n    .get(API_URL + groupId + \"/threads/\" + threadId, {\n      headers: authHeader()\n    });\n    return response.data;\n  }\n\n  const getComments = async (threadId) => {\n    const response = await axios\n    .get(API_URL + \"threads/\" + threadId + \"/comments\", {\n      headers: authHeader()\n    });\n    return response.data;\n  }\n\n  const postComment = async (threadId, content) => {\n    const response = await axios\n    .post(API_URL + \"threads/\" + threadId + \"/comments\", {\"content\": content}, {\n      headers: authHeader(),\n    });\n    return response.data;\n  }\n\n  const Subscribe = async (groupId) => {\n    const response = await axios\n    .post(API_URL + groupId + \"/subscribe\", {}, {\n        headers: authHeader()\n    });\n    return response.data;\n  }\n\n  const unSubscribe = async (groupId) => {\n    const response = await axios\n    .post(API_URL + groupId + \"/unsubscribe\", {}, {\n        headers: authHeader()\n    });\n    return response.data;\n  }\n\n  const createGroup = async (name, description) => {\n    const response = await axios\n    .post(API_URL, {\"name\": name, \"description\": description}, {\n      headers: authHeader()\n    });\n    return response.data;\n  }\n\n  const toExport = {\n    getCreatedGroups,\n    getCreatedThreads,\n    getCreatedComments,\n    getSubscribed,\n    searchGroups,\n    getAllGroups,\n    getAllThreads,\n    getGroupThreads,\n    postThread,\n    getThread,\n    getGroup,\n    getComments,\n    postComment,\n    Subscribe,\n    unSubscribe,\n    createGroup,\n  }\n  \n  export default toExport;","import React, { useState, useEffect } from \"react\";\nimport GroupAPI from \"../services/group-api\";\nimport { Card, Col, Row, Button } from 'antd';\nimport { Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\n\nconst Home = () => {\n  \n  const [allThreads, setAllThreads] = useState([]);\n\n  useEffect(() => {\n    GroupAPI.getAllThreads()\n    .then((responseJson) => {\n      responseJson.sort((a, b) => {\n        const date1 = new Date(a.created);\n        const date2 = new Date(b.created);\n        return date2.getTime() - date1.getTime();\n      });\n      setAllThreads(responseJson);\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n  }, []);\n\n  return (\n    <div>\n      <center><h1>Recent Threads</h1></center>\n      <ul>\n        {allThreads.map(item => {\n          return <Row gutter={16} className=\"group-row\">\n            <Col span={23}>\n              <Card title={item.title} type='inner' extra={<Link to={'/groups/'+item.group}>Go to Group</Link>} bordered>\n              <Link to={'/threads/'+item.group+'/'+item.id}>\n                <Button type=\"primary\">Go To Thread</Button><br/>\n                </Link>\n              </Card>\n            </Col>\n          </Row>\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState, useEffect } from \"react\";\nimport AuthService from \"../services/auth.service\";\nimport { Card, Col, Row, Button, Tabs, Comment, Tooltip } from 'antd';\nimport { Link } from \"react-router-dom\";\nimport GroupAPI from \"../services/group-api\";\n\nconst { TabPane } = Tabs;\n\nconst Profile = () => {\n  const currentUser = AuthService.getCurrentUser();\n  const [groups, setGroups] = useState([]);\n  const [threads, setThreads] = useState([]);\n  const [comments, setComments] = useState([]);\n\n  useEffect(() => {\n    GroupAPI.getCreatedGroups()\n    .then((responseJson) => {\n      responseJson.sort((a, b) => {\n        if (a.name.toUpperCase() < b.name.toUpperCase()) return -1;\n        if (a.name.toUpperCase() > b.name.toUpperCase()) return 1;\n        return 0;\n      });\n      setGroups(responseJson);\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n  }, []);\n\n  useEffect(() => {\n    GroupAPI.getCreatedThreads()\n    .then((responseJson) => {\n      responseJson.sort((a, b) => {\n        const date1 = new Date(a.created);\n        const date2 = new Date(b.created);\n        return date2.getTime() - date1.getTime();\n      });\n      setThreads(responseJson);\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n  }, []);\n\n  useEffect(() => {\n    GroupAPI.getCreatedComments()\n    .then((responseJson) => {\n      responseJson.sort((a, b) => {\n        const date1 = new Date(a.created);\n        const date2 = new Date(b.created);\n        return date2.getTime() - date1.getTime();\n      });\n      setComments(responseJson);\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <header className=\"jumbotron\">\n        <h3>\n          Profile: <strong>{currentUser.username}</strong>\n        </h3>\n      </header>\n      <Tabs type='card'>\n        <TabPane tab='Profile Info' key='1'>\n          <p>\n            <strong>Email:</strong> {currentUser.email}\n          </p>\n        </TabPane>\n        <TabPane tab='Groups' key='2'>\n          <div className=\"group-cards\">\n            <ul>\n              {groups.sort().map(item => {\n                return <Row gutter={16} className=\"group-row\">\n                  <Col span={23}>\n                    <Card title={item.name} bordered>\n                      <Link to={'/groups/'+item.id}> <Button type=\"primary\" size=\"small\">Go To Group</Button></Link>\n                    </Card>\n                  </Col>\n                </Row>\n              })}\n            </ul>\n          </div>\n        </TabPane>\n        <TabPane tab='Threads' key='3'>\n          <ul>\n            {threads.map(item => {\n              return <Row gutter={16} className=\"group-row\">\n                <Col span={23}>\n                  <Card title={item.title} type='inner' extra={<Link to={'/groups/'+item.group}>Go to Group</Link>} bordered>\n                    <Link to={'/threads/'+item.group+'/'+item.id}>\n                    <Button size=\"small\" type=\"primary\">Go To Thread</Button><br/>\n                    </Link>\n                  </Card>\n                </Col>\n              </Row>\n            })}\n          </ul>\n        </TabPane>\n        <TabPane tab='Comments' key='4'>\n          <ul>\n            {comments.map(item => {\n              return <Comment actions={[<Link to={\"/threads/\"+item.group+\"/\"+item.thread}>Go to Thread</Link>]}\n              author={item.creator}\n              content={\n                <p>\n                  {item.content}\n                </p>\n              }\n              datetime={\n                <Tooltip title={item.created}>\n                  <span>{item.created}</span>\n                </Tooltip>\n              }\n            />\n            })}\n          </ul>\n        </TabPane>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React, { useState, useEffect } from \"react\";\nimport { Card, Col, Row, Input, Button, Alert, Tabs } from 'antd';\nimport { Link } from \"react-router-dom\";\nimport GroupAPI from \"../services/group-api\";\nimport \"./GroupSearch.css\"\nimport \"antd/dist/antd.css\";\n\n\nconst { Search } = Input;\nconst { TabPane } = Tabs;\n\nconst GroupSearch = () => {\n  const [search, setSearch] = useState('');\n  const [allGroups, setAllGroups] = useState([]);\n  const [filteredGroups, setFilteredGroups] = useState([]);\n  const [subscribedGroups, setSubscribedGroups] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  // const [currentGroup, setCurrentGroup] = useState([]);\n\n  useEffect(() => {\n    GroupAPI.getAllGroups()\n    .then((responseJson) => {\n      responseJson.sort((a, b) => {\n        if (a.name.toUpperCase() < b.name.toUpperCase()) return -1;\n        if (a.name.toUpperCase() > b.name.toUpperCase()) return 1;\n        return 0;\n      });\n      setAllGroups(responseJson);\n      setFilteredGroups(responseJson)\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n  }, []);\n\n  useEffect(() => {\n    GroupAPI.getSubscribed().then((responseJson) => {\n      responseJson.sort((a, b) => {\n        if (a.name.toUpperCase() < b.name.toUpperCase()) return -1;\n        if (a.name.toUpperCase() > b.name.toUpperCase()) return 1;\n        return 0;\n      });\n      setSubscribedGroups(responseJson);\n    })\n    .catch((error) => {\n      console.error(error);\n    })\n  }, []);\n\n  const clickSub = (e) => {\n    GroupAPI.Subscribe(e)\n    .then(\n      (response) => {\n        setMessage(\"You have subscribed successfully!\");\n      },\n      (error) => {\n        setMessage(\"You are already subscribed!\");\n      }\n    );\n  }\n\n  const clickUnsub = (e) => {\n    GroupAPI.unSubscribe(e)\n    .then(\n      (response) => {\n        setMessage(\"You have unsubscribed successfully!\");\n      },\n      (error) => {\n        setMessage(\"You are not subscribed or you're the creator of this group!\");\n      }\n    );\n  }\n\n  const searchGroup = (e) => {\n    if(e){\n      const newData = allGroups.filter(\n        function(item){\n          const itemData = item.name\n          ? item.name.toUpperCase()\n          : ''.toUpperCase();\n          const textData = e.toUpperCase();\n          return itemData.indexOf(textData) > -1;\n        }\n      ).sort((a, b) => {\n        if (a.name.toUpperCase() < b.name.toUpperCase()) return -1;\n        if (a.name.toUpperCase() > b.name.toUpperCase()) return 1;\n        return 0;\n      });\n      setFilteredGroups(newData);\n      setSearch(e);\n      console.log(search);\n    }\n    else {\n      setFilteredGroups(allGroups);\n      setSearch(e);\n    }\n  }\n\n  // const setGroupItem = async (e) => {\n  //   await setCurrentGroup(e);\n  // }\n\n  // const getGroup = async() => {\n  //   const toReturn = await currentGroup;\n  //   return toReturn;\n  // }\n  const handleChange = (key) => {\n    if (key === \"1\") {\n      window.location.reload(false);\n    }\n  }\n  \n  return (\n    <Tabs type='card' onChange={handleChange}>\n      <TabPane tab='Subscribed Groups' key=\"1\">\n        <div className=\"group-cards\">\n          <ul>\n            {subscribedGroups.sort().map(item => {\n              return <Row gutter={16} className=\"group-row\">\n                <Col span={23}>\n                  <Card title={item.name} bordered>\n                    <Link to={'/groups/'+item.id}> <Button type=\"primary\" size=\"small\">Go To Group</Button></Link>\n                  </Card>\n                </Col>\n              </Row>\n            })}\n          </ul>\n        </div>\n      </TabPane>\n      <TabPane tab='Search Groups' key=\"2\">\n        <div className=\"group-search\">\n          <div className=\"search-bar\">\n            <Search placeholder=\"Search for group\" size=\"large\" onSearch={searchGroup} />\n          </div>\n          <div className=\"group-cards\">\n            {message && (\n              <Alert message={message} type='info'/>\n            )}\n            <ul>\n              {filteredGroups.map(item => {\n                return <Row gutter={16} className=\"group-row\">\n                  <Col span={23}>\n                    <Card title={item.name} bordered>\n                      <Button type=\"primary\" size=\"small\" onClick={() => clickSub(item.id)}>Subscribe</Button> <Button type=\"primary\" size=\"small\" onClick={() => clickUnsub(item.id)}>Unsubscribe</Button> <Link to={'/groups/'+item.id}> <Button type=\"primary\" size=\"small\">Go To Group</Button></Link>\n                    </Card>\n                  </Col>\n                </Row>\n              })}\n            </ul>\n          </div>\n        </div>\n      </TabPane>\n    </Tabs>\n  )\n};\n\n\n\nexport default GroupSearch;\n","import React, { useState, useEffect } from \"react\";\nimport GroupAPI from \"../services/group-api\";\nimport { Card, Col, Row, Button, Modal, Form, Input, Alert} from 'antd';\nimport { Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport \"./Group.css\"\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 16 },\n};\n\nconst GroupPage = (props) => {\n\n    const onFinish = values => {\n      GroupAPI.postThread(group.id, values.ThreadTitle, values.ThreadContent).then(() => {\n        setIsModalVisible(false);\n        refreshPage();\n      });\n    };\n\n    const clickSub = (e) => {\n      GroupAPI.Subscribe(e)\n      .then(\n        (response) => {\n          setMessage(\"You have subscribed successfully!\");\n        },\n        (error) => {\n          setMessage(\"You are already subscribed!\");\n        }\n      );\n    }\n  \n    const clickUnsub = (e) => {\n      GroupAPI.unSubscribe(e)\n      .then(\n        (response) => {\n          setMessage(\"You have unsubscribed successfully!\");\n        },\n        (error) => {\n          setMessage(\"You are not subscribed or you're the creator of this group!\");\n        }\n      );\n    }\n\n    const refreshPage = () => {\n      window.location.reload(false);\n    }\n\n    const onFinishFailed = errorInfo => {\n      console.log('Failed:', errorInfo);\n    };\n\n    const [group, setGroup] = useState([]);\n    const [groupThreads, setGroupThreads] = useState([]);\n    const groupId = props.match.params.id;\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    const [message, setMessage] = useState(\"\");\n\n    const showModal = () => {\n      setIsModalVisible(true);\n    };\n\n    const handleOk = (e) => {\n      setIsModalVisible(false);\n    };\n\n    const handleCancel = () => {\n      setIsModalVisible(false);\n    };\n\n    useEffect(() => {\n        GroupAPI.getGroup(groupId)\n        .then((responseJson) => {\n        setGroup(responseJson);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n      }, [groupId]);\n\n      useEffect(() => {\n        GroupAPI.getGroupThreads(groupId)\n        .then((responseJson) => {\n          responseJson.sort((a, b) => {\n            const date1 = new Date(a.created);\n            const date2 = new Date(b.created);\n            return date2.getTime() - date1.getTime();\n          });\n          setGroupThreads(responseJson);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n      }, [groupId]);\n    \n    return (\n      <div className=\"group-page\">\n        {message && (\n          <Alert message={message} type='info'/>\n        )}\n        <Row gutter={16}>\n            <Col span={24}>\n              <Card title={group.name} bordered>\n                <p>{group.description}</p>\n                <p>Creator: {group.creator}</p>\n                <p>Created: {group.created}</p>\n                <Button type=\"primary\" size=\"small\" onClick={() => clickSub(group.id)}>Subscribe</Button> <Button type=\"primary\" size=\"small\" onClick={() => clickUnsub(group.id)}>Unsubscribe</Button> <Button size=\"small\" type=\"primary\" onClick={showModal}>Create Thread</Button><br/><br/><br/>\n                <ul>\n                {groupThreads.map(item => {\n                  return <Row gutter={16} className=\"group-row\">\n                    <Col span={23}>\n                      <Card title={item.title} type='inner' bordered>\n                        <Link to={'/threads/'+group.id+'/'+item.id}>\n                          <Button size=\"small\" type=\"primary\">Go To Thread</Button><br/>\n                        </Link>\n                      </Card>\n                    </Col>\n                  </Row>\n                })}\n                </ul>\n              </Card>\n            </Col>\n          </Row>\n\n          <Modal\n        title=\"Create a new thread!\"\n        visible={isModalVisible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        allowClear=\"true\"\n        footer={[\n            <Button key=\"back\" onClick={handleCancel}>\n              Cancel\n            </Button>\n          ]}\n        >\n          <Form\n      {...layout}\n      name=\"basic\"\n      initialValues={{ remember: true }}\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n    >\n      <Form.Item\n        label=\"Thread Title\"\n        name=\"ThreadTitle\"\n        rules={[{ required: true, message: 'Please input a title!' }]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Thread Content\"\n        name=\"ThreadContent\"\n        rules={[{ required: true, message: 'Please input some content!' }]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item {...tailLayout}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n        </Modal>\n\n          {/* <ul>\n        {groupThreads.map(item => {\n          return <Row gutter={16} className=\"group-row\">\n            <Col span={23}>\n              <Card title={item.title} bordered>\n                <Link to={'/threads/'+group.id+'/'+item.id}>\n                <Button size=\"small\" type=\"primary\">Go To Thread</Button><br/>\n                </Link>\n              </Card>\n            </Col>\n          </Row>\n        })}\n      </ul> */}\n      </div>\n      \n    )\n  };\n  \n  \n  \n  export default GroupPage;","import GroupAPI from \"../services/group-api\";\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Col, Row, Button, Comment, Tooltip, Modal, Input} from 'antd';\nimport { Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\n\nconst { Search } = Input;\n\nconst ThreadPage = (props) => {\n\n    const [thread, setThread] = useState([]);\n    const [threadComments, setThreadComments] = useState([]);\n    const threadId = props.match.params.threadId;\n    const groupId = props.match.params.groupId;\n    const [isModalVisible, setIsModalVisible] = useState(false);\n\n    const onChangePostContent = (e) => {\n        GroupAPI.postComment(threadId, e).then(() => {\n          setIsModalVisible(false);\n          refreshPage();\n        });\n    }\n\n    const refreshPage = () => {\n        window.location.reload(false);\n    }\n\n    const showModal = () => {\n        setIsModalVisible(true);\n      };\n\n      const handleOk = (e) => {\n        setIsModalVisible(false);\n      };\n\n      const handleCancel = () => {\n        setIsModalVisible(false);\n      };\n\n    useEffect(() => {\n        GroupAPI.getComments(threadId)\n        .then((responseJson) => {\n        setThreadComments(responseJson);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n      }, [threadId]);\n\n      useEffect(() => {\n        GroupAPI.getThread(groupId, threadId)\n        .then((responseJson) => {\n        setThread(responseJson);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n      }, [threadId, groupId]);\n\n      useEffect(() => {\n        GroupAPI.getComments(threadId)\n        .then((responseJson) => {\n        setThreadComments(responseJson);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n      }, [threadId]);\n\n    return (\n    <div>\n        <div>\n        <Row gutter={16} className=\"group-row\">\n            <Col span={23}>\n              <Card title={thread.title} extra={<Link to={'/groups/'+thread.group}>Go to Group</Link>} bordered>\n                <p>{thread.content}</p>\n                <Button type=\"primary\" onClick={showModal}>Add Comment</Button><br/>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n        <Modal\n        title=\"Post a Comment!\"\n        visible={isModalVisible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        allowClear=\"true\"\n        footer={[\n            <Button key=\"back\" onClick={handleCancel}>\n              Cancel\n            </Button>\n          ]}\n        >\n        <Search\n        placeholder=\"Write your comment here!\"\n        enterButton=\"Post\"\n        size=\"large\"\n        onSearch={onChangePostContent}\n        />   \n        </Modal>\n        <ul>\n        {threadComments.map(item => {\n          return <Comment\n          author={item.creator}\n          content={\n            <p>\n              {item.content}\n            </p>\n          }\n          datetime={\n            <Tooltip title={item.created}>\n              <span>{item.created}</span>\n            </Tooltip>\n          }\n        />\n        })}\n      </ul>\n    </div>\n    )\n}\n\nexport default ThreadPage;\n","import React, { useState } from \"react\";\nimport GroupAPI from \"../services/group-api\";\nimport \"./LoginAndRegister.css\";\nimport { Form, Input, Button, Alert } from \"antd\";\n\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 10,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\n\nconst CreateGroup = (props) => {\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const onChangeName = (e) => {\n    const name = e.target.value;\n    setName(name);\n  };\n\n  const onChangeDescription = (e) => {\n    const description = e.target.value;\n    setDescription(description);\n  };\n\n  const handleCreateGroup = (e) => {\n    GroupAPI.createGroup(name, description).then((responseJson) => {\n      props.history.push(\"/groups/\"+responseJson.id);\n    },\n    (error) => {\n      setMessage(\"A group with that name already exists!\");\n    }\n    );\n  };\n\n  return (\n    <div>\n      <div>\n        <center><h1>Group Creation</h1></center>\n      </div>\n      <div>\n        {message && (\n          <Alert message={message} type='info'/>\n        )}\n      </div>\n      <br/>\n      <Form \n        {...layout}\n        name=\"basic\"\n        onFinish={handleCreateGroup}\n      >\n        <Form.Item\n          label=\"Name\"\n          name=\"name\"\n          rules={[{required: true, message: \"Please give your group a name!\"}]}\n        >\n          <Input onChange={onChangeName} />\n        </Form.Item>\n        <Form.Item\n          label=\"Description\"\n          name=\"description\"\n          rules={[{required: true, message: \"Please give your group a description!\"}]}\n        >\n          <Input onChange={onChangeDescription} />\n        </Form.Item>\n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Create\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nexport default CreateGroup;\n","import React, { useState, useEffect } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport AuthService from \"./services/auth.service\";\n\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Home from \"./components/Home\";\nimport Profile from \"./components/Profile\";\nimport GroupSearch from \"./components/GroupSearch\";\nimport GroupPage from \"./components/Group\";\nimport ThreadPage from \"./components/Thread\";\nimport CreateGroup from \"./components/CreateGroup\";\n\nconst App = () => {\n  const [currentUser, setCurrentUser] = useState(undefined);\n\n  useEffect(() => {\n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      setCurrentUser(user);\n    }\n  }, []);\n\n  const logOut = () => {\n    AuthService.logout();\n    setCurrentUser(undefined);\n  };\n\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n        {currentUser ? (\n          <Link to={\"/home\"} className=\"navbar-brand\">\n            Thread3r\n          </Link>\n        ) : (\n          <Link to={\"/login\"} className=\"navbar-brand\">\n            Thread3r\n          </Link>\n        )}\n\n        <div className=\"navbar-nav mr-auto\">\n            {currentUser && (\n              <li className=\"nav-item\">\n                <Link to={\"/home\"} className=\"nav-link\">\n                  Home\n                </Link>\n              </li>\n            )}\n            {currentUser && (\n              <li>\n                <Link to={\"/groupsearch\"} className=\"nav-link\">\n                  Groups\n                </Link>\n              </li>\n            )}\n            {currentUser && (\n              <li>\n                <Link to={\"/groupcreate\"} className=\"nav-link\">\n                  Create Group\n                </Link>\n              </li>\n            )}\n\n        </div>\n\n        {currentUser ? (\n          <div className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/profile\"} className=\"nav-link\">\n                {currentUser.username}\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={\"/login\"} className=\"nav-link\" onClick={logOut}>\n                Log Out\n              </Link>\n            </li>\n          </div>\n        ) : (\n          <div className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/login\"} className=\"nav-link\">\n                Login\n              </Link>\n            </li>\n\n            <li className=\"nav-item\">\n              <Link to={\"/register\"} className=\"nav-link\">\n                Register\n              </Link>\n            </li>\n          </div>\n        )}\n      </nav>\n\n      <div className=\"container mt-3\">\n        <Switch>\n          <Route exact path={\"/home\"} component={Home} />\n          <Route exact path={[\"/\", \"/login\"]} component={Login} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/profile\" component={Profile} />\n          <Route exact path=\"/groupsearch\" component={GroupSearch} />\n          <Route exact path=\"/groupcreate\" component={CreateGroup} />\n          <Route exact path=\"/groups/:id\" render={(props) => <GroupPage {...props} />} />\n          <Route exact path=\"/threads/:groupId/:threadId\" render={(props) => <ThreadPage {...props} />} />\n        </Switch>\n      </div>\n    </div>\n  );\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n    }\n  }","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.REACT_APP_ROUTER_BASE}>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}