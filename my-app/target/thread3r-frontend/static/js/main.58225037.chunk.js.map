{"version":3,"sources":["services/auth.service.js","components/Login.js","components/Register.js","services/auth-header.js","services/group-api.js","components/Home.js","components/Profile.js","components/GroupSearch.js","components/Group.js","components/Thread.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","toExport","register","username","email","password","axios","post","login","then","response","data","token","localStorage","setItem","JSON","stringify","logout","removeItem","getCurrentUser","parse","getItem","required","value","className","role","Login","props","form","useRef","checkBtn","useState","setUsername","setPassword","loading","setLoading","message","setMessage","src","alt","onSubmit","e","preventDefault","current","validateAll","context","_errors","length","AuthService","history","push","window","location","reload","error","resMessage","toString","ref","htmlFor","type","name","onChange","target","validations","disabled","style","display","validEmail","isEmail","vusername","vpassword","Register","setEmail","verifyPassword","setVerifyPassword","successful","setSuccessful","authHeader","user","Authorization","getSubscribed","userId","a","get","headers","getGroup","groupId","searchGroups","searchToken","getAllGroups","getAllThreads","getGroupThreads","postThread","title","content","getThread","threadId","getComments","postComment","Subscribe","unSubscribe","createGroup","description","Home","allThreads","setAllThreads","useEffect","GroupAPI","responseJson","catch","console","map","item","gutter","span","bordered","to","group","id","Profile","currentUser","Search","Input","GroupSearch","search","setSearch","allGroups","setAllGroups","filteredGroups","setFilteredGroups","placeholder","size","onSearch","newData","filter","itemData","toUpperCase","textData","indexOf","log","onClick","layout","labelCol","wrapperCol","tailLayout","offset","GroupPage","refreshPage","setGroup","groupThreads","setGroupThreads","match","params","isModalVisible","setIsModalVisible","handleCancel","creator","created","visible","onOk","onCancel","allowClear","footer","initialValues","remember","onFinish","values","ThreadTitle","ThreadContent","onFinishFailed","errorInfo","Item","label","rules","htmlType","ThreadPage","thread","setThread","threadComments","setThreadComments","enterButton","author","datetime","App","undefined","setCurrentUser","exact","path","component","render","Thread","Boolean","hostname","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.58225037.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst API_URL = \"http://csci4830.ddns.net:8080/thread3r-backend/api/auth/\";\n\nconst register = (username, email, password) => {\n  return axios.post(API_URL + \"register\", {\n    username,\n    email,\n    password,\n  });\n};\n\nconst login = (username, password) => {\n  return axios\n    .post(API_URL + \"login\", {\n      username,\n      password,\n    })\n    .then((response) => {\n      if (response.data.token) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n\n      return response.data;\n    });\n};\n\nconst logout = () => {\n  localStorage.removeItem(\"user\");\n};\n\nconst getCurrentUser = () => {\n  return JSON.parse(localStorage.getItem('user'));\n};\n\nvar toExport = {\n  register,\n  login, \n  logout,\n  getCurrentUser,\n};\n\nexport default toExport;\n","import React, { useState, useRef } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport \"./LoginAndRegister.css\";\n\nimport AuthService from \"../services/auth.service\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst Login = (props) => {\n  const form = useRef();\n  const checkBtn = useRef();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const onChangeUsername = (e) => {\n    const username = e.target.value;\n    setUsername(username);\n  };\n\n  const onChangePassword = (e) => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n\n    setMessage(\"\");\n    setLoading(true);\n\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0) {\n      AuthService.login(username, password).then(\n        () => {\n          props.history.push(\"/profile\");\n          window.location.reload();\n        },\n        (error) => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          setLoading(false);\n          setMessage(resMessage);\n        }\n      );\n    } else {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"col-md-12\">\n      <div className=\"card card-container\">\n        <img\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n          alt=\"profile-img\"\n          className=\"profile-img-card\"\n        />\n\n        <Form onSubmit={handleLogin} ref={form}>\n          <div className=\"form-group\">\n            <label htmlFor=\"username\">Username</label>\n            <Input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"username\"\n              value={username}\n              onChange={onChangeUsername}\n              validations={[required]}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password</label>\n            <Input\n              type=\"password\"\n              className=\"form-control\"\n              name=\"password\"\n              value={password}\n              onChange={onChangePassword}\n              validations={[required]}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <button className=\"btn btn-primary btn-block\" disabled={loading}>\n              {loading && (\n                <span className=\"spinner-border spinner-border-sm\"></span>\n              )}\n              <span>Login</span>\n            </button>\n          </div>\n\n          {message && (\n            <div className=\"form-group\">\n              <div className=\"alert alert-danger\" role=\"alert\">\n                {message}\n              </div>\n            </div>\n          )}\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;","import React, { useState, useRef } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\nimport \"./LoginAndRegister.css\";\n\nimport AuthService from \"../services/auth.service\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst validEmail = (value) => {\n  if (!isEmail(value)) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This is not a valid email.\n      </div>\n    );\n  }\n};\n\nconst vusername = (value) => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The username must be between 3 and 20 characters.\n      </div>\n    );\n  }\n};\n\nconst vpassword = (value) => {\n  if (value.length < 6 || value.length > 40) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The password must be between 6 and 40 characters.\n      </div>\n    );\n  }\n};\n\n// const samepassword = (value, verifyPassword) => {\n//   if (value != verifyPassword) {\n//     return (\n//       <div className=\"alert alert-danger\" role=\"alert\">\n//         These passwords do not match!\n//       </div>\n//     );\n//   }\n// };\n\nconst Register = (props) => {\n  const form = useRef();\n  const checkBtn = useRef();\n\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [verifyPassword, setVerifyPassword] = useState(\"\");\n  const [successful, setSuccessful] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const onChangeUsername = (e) => {\n    const username = e.target.value;\n    setUsername(username);\n  };\n\n  const onChangeEmail = (e) => {\n    const email = e.target.value;\n    setEmail(email);\n  };\n\n  const onChangePassword = (e) => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const onChangeVerifyPassword = (e) => {\n    const verifyPassword = e.target.value;\n    setVerifyPassword(verifyPassword);\n  };\n  \n\n  const handleRegister = (e) => {\n    e.preventDefault();\n\n    setMessage(\"\");\n    setSuccessful(false);\n\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0) {\n      if(password !== verifyPassword){\n        setMessage(\"The passwords do not match\");\n        setSuccessful(false);\n      }\n      else{\n      AuthService.register(username, email, password).then(\n        (response) => {\n          setMessage(response.data.message);\n          setSuccessful(true);\n        },\n        (error) => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          setMessage(resMessage);\n          setSuccessful(false);\n        }\n      );\n    }\n  }\n  };\n\n  return (\n    <div className=\"col-md-12\">\n      <div className=\"card card-container\">\n        <img\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n          alt=\"profile-img\"\n          className=\"profile-img-card\"\n        />\n\n        <Form onSubmit={handleRegister} ref={form}>\n          {!successful && (\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"username\">Username</label>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"username\"\n                  value={username}\n                  onChange={onChangeUsername}\n                  validations={[required, vusername]}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"email\">Email</label>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"email\"\n                  value={email}\n                  onChange={onChangeEmail}\n                  validations={[required, validEmail]}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"password\">Password</label>\n                <Input\n                  type=\"password\"\n                  className=\"form-control\"\n                  name=\"password\"\n                  value={password}\n                  onChange={onChangePassword}\n                  validations={[required, vpassword]}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"verifypassword\">Verify Password</label>\n                <Input\n                  type=\"password\"\n                  className=\"form-control\"\n                  name=\"verifyPassword\"\n                  value={verifyPassword}\n                  onChange={onChangeVerifyPassword}\n                  // validations={[required, samepassword(password, verifyPassword)]}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <button className=\"btn btn-primary btn-block\">Sign Up</button>\n              </div>\n            </div>\n          )}\n\n          {message && (\n            <div className=\"form-group\">\n              <div\n                className={ successful ? \"alert alert-success\" : \"alert alert-danger\" }\n                role=\"alert\"\n              >\n                {message}\n              </div>\n            </div>\n          )}\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n","export default function authHeader() {\n    const user = JSON.parse(localStorage.getItem('user'));\n  \n    if (user && user.token) {\n      return { Authorization: 'Bearer ' + user.token };\n    } else {\n      return {};\n    }\n  }\n  ","import axios from \"axios\";\nimport authHeader from \"./auth-header\";\n\nconst API_URL = \"http://csci4830.ddns.net:8080/thread3r-backend/api/groups/\";\n\nconst getSubscribed = async (userId) => {\n    const response = await axios\n    .get(API_URL + \"subscribed\", {\n      userId,\n      headers: authHeader()\n    });\n  return response.data;\n  };\n\n  const getGroup = async (groupId) => {\n    const response = await axios\n    .get(API_URL + groupId, {\n      headers: authHeader()\n    });\n    return response.data;\n  }\n\n  const searchGroups = async (searchToken) => {\n      const response = await axios\n      .get(API_URL + \"search?name=\", {\n        searchToken,\n        headers: authHeader(),\n      });\n    return response.data;\n  }\n\n  const getAllGroups = async () => {\n    const response = await axios\n      .get(API_URL, {\n        headers: authHeader()\n      });\n    return response.data;\n  }\n\n  const getAllThreads = async () => {\n    const response = await axios\n    .get(API_URL + \"threads\", {\n      headers: authHeader()\n    });\n  return response.data;\n  }\n\n  const getGroupThreads = async (groupId) => {\n    const response = await axios\n    .get(API_URL + groupId + \"/threads\", {\n      headers: authHeader()\n    });\n  return response.data;\n  }\n\n  const postThread = async (groupId, title, content) => {\n    const response = await axios\n    .post(API_URL + groupId + \"/threads\", {\"title\": title, \"content\": content}, {\n      headers: authHeader()\n    });\n    return response.data;\n  }\n\n  const getThread = async (groupId, threadId) => {\n    const response = await axios\n    .get(API_URL + groupId + \"/threads/\" + threadId, {\n      headers: authHeader()\n    });\n    return response.data;\n  }\n\n  const getComments = async (threadId) => {\n    const response = await axios\n    .get(API_URL + \"threads/\" + threadId + \"/comments\", {\n      headers: authHeader()\n    });\n    return response.data;\n  }\n\n  const postComment = async (threadId, content) => {\n    const response = await axios\n    .post(API_URL + \"threads/\" + threadId + \"/comments\", {\"content\": content}, {\n      headers: authHeader(),\n    });\n    return response.data;\n  }\n\n  const Subscribe = async (groupId) => {\n    const response = await axios\n    .post(API_URL + groupId + \"/subscribe\", {}, {\n        headers: authHeader()\n    });\n    return response.data;\n  }\n\n  const unSubscribe = async (groupId) => {\n    const response = await axios\n    .post(API_URL + groupId + \"/unsubscribe\", {}, {\n        headers: authHeader()\n    });\n    return response.data;\n  }\n\n  const createGroup = async (name, description) => {\n    const response = await axios\n    .post(API_URL, {\"name\": name, \"description\": description}, {\n      headers: authHeader()\n    });\n    return response.data;\n  }\n\n  const toExport = {\n    getSubscribed,\n    searchGroups,\n    getAllGroups,\n    getAllThreads,\n    getGroupThreads,\n    postThread,\n    getThread,\n    getGroup,\n    getComments,\n    postComment,\n    Subscribe,\n    unSubscribe,\n    createGroup,\n  }\n  \n  export default toExport;","import React, { useState, useEffect } from \"react\";\nimport GroupAPI from \"../services/group-api\";\nimport { Card, Col, Row, Button} from 'antd';\nimport { Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\n\nconst Home = () => {\n  \n  const [allThreads, setAllThreads] = useState([]);\n\n  useEffect(() => {\n    GroupAPI.getAllThreads()\n    .then((responseJson) => {\n      setAllThreads(responseJson);\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n  }, []);\n\n  return (\n    <div>\n      <ul>\n        {allThreads.map(item => {\n          return <Row gutter={16} className=\"group-row\">\n            <Col span={23}>\n              <Card title={item.title} bordered>\n              <Link to={'/threads/'+item.group+'/'+item.id}>\n                <Button type=\"primary\">Go To Thread</Button><br/>\n                </Link>\n              </Card>\n            </Col>\n          </Row>\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport AuthService from \"../services/auth.service\";\n\nconst Profile = () => {\n  const currentUser = AuthService.getCurrentUser();\n\n  return (\n    <div className=\"container\">\n      <header className=\"jumbotron\">\n        <h3>\n          Profile: <strong>{currentUser.username}</strong>\n        </h3>\n      </header>\n      <p>\n        <strong>Email:</strong> {currentUser.email}\n      </p>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React, { useState, useEffect } from \"react\";\nimport { Card, Col, Row, Input, Button, Alert } from 'antd';\nimport { Link } from \"react-router-dom\";\nimport GroupAPI from \"../services/group-api\";\nimport \"./GroupSearch.css\"\nimport \"antd/dist/antd.css\";\n\n\nconst { Search } = Input;\n\nconst GroupSearch = () => {\n  const [search, setSearch] = useState('');\n  const [allGroups, setAllGroups] = useState([]);\n  const [filteredGroups, setFilteredGroups] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  // const [currentGroup, setCurrentGroup] = useState([]);\n\n  useEffect(() => {\n    GroupAPI.getAllGroups()\n    .then((responseJson) => {\n      setAllGroups(responseJson);\n      setFilteredGroups(responseJson)\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n  }, []);\n\n  const clickSub = (e) => {\n    GroupAPI.Subscribe(e)\n    .then(\n      (response) => {\n        setMessage(\"You have subscribed successfully!\");\n      },\n      (error) => {\n        setMessage(\"You are already subscribed!\");\n      }\n    );\n  }\n\n  const clickUnsub = (e) => {\n    GroupAPI.unSubscribe(e)\n    .then(\n      (response) => {\n        setMessage(\"You have unsubscribed successfully!\");\n      },\n      (error) => {\n        setMessage(\"You are not subscribed or you're the creator of this group!\");\n      }\n    );\n  }\n\n  const searchGroup = (e) => {\n    if(e){\n      const newData = allGroups.filter(\n        function(item){\n          const itemData = item.name\n          ? item.name.toUpperCase()\n          : ''.toUpperCase();\n          const textData = e.toUpperCase();\n          return itemData.indexOf(textData) > -1;\n        }\n      );\n      setFilteredGroups(newData);\n      setSearch(e);\n      console.log(search);\n    }\n    else {\n      setFilteredGroups(allGroups);\n      setSearch(e);\n    }\n  }\n\n  // const setGroupItem = async (e) => {\n  //   await setCurrentGroup(e);\n  // }\n\n  // const getGroup = async() => {\n  //   const toReturn = await currentGroup;\n  //   return toReturn;\n  // }\n  \n  return (\n    <div className=\"group-search\">\n      <div className=\"search-bar\">\n        <Search placeholder=\"Search for group\" size=\"large\" onSearch={searchGroup} />\n      </div>\n      <div className=\"group-cards\">\n        {message && (\n          <Alert message={message} type='info'/>\n        )}\n      <ul>\n        {filteredGroups.map(item => {\n          return <Row gutter={16} className=\"group-row\">\n            <Col span={23}>\n              <Card title={item.name} bordered>\n                <Button type=\"primary\" size=\"small\" onClick={() => clickSub(item.id)}>Subscribe</Button> <Button type=\"primary\" size=\"small\" onClick={() => clickUnsub(item.id)}>Unsubscribe</Button> <Link to={'/groups/'+item.id}> <Button type=\"primary\" size=\"small\">Go To Group</Button></Link>\n              </Card>\n            </Col>\n          </Row>\n        })}\n      </ul>\n      </div>\n    </div>\n    \n  )\n};\n\n\n\nexport default GroupSearch;\n","import React, { useState, useEffect } from \"react\";\nimport GroupAPI from \"../services/group-api\";\nimport { Card, Col, Row, Button, Modal, Form, Input} from 'antd';\nimport { Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport \"./Group.css\"\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 16 },\n};\n\nconst GroupPage = (props) => {\n\n    const onFinish = values => {\n      GroupAPI.postThread(group.id, values.ThreadTitle, values.ThreadContent).then(() => {\n        setIsModalVisible(false);\n        refreshPage();\n      });\n    };\n\n    const refreshPage = () => {\n      window.location.reload(false);\n  }\n\n    const onFinishFailed = errorInfo => {\n      console.log('Failed:', errorInfo);\n    };\n\n    const [group, setGroup] = useState([]);\n    const [groupThreads, setGroupThreads] = useState([]);\n    const groupId = props.match.params.id;\n    const [isModalVisible, setIsModalVisible] = useState(false);\n\n    const showModal = () => {\n      setIsModalVisible(true);\n    };\n\n    const handleOk = (e) => {\n      setIsModalVisible(false);\n    };\n\n    const handleCancel = () => {\n      setIsModalVisible(false);\n    };\n\n    useEffect(() => {\n        GroupAPI.getGroup(groupId)\n        .then((responseJson) => {\n        setGroup(responseJson);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n      }, [groupId]);\n\n      useEffect(() => {\n        GroupAPI.getGroupThreads(groupId)\n        .then((responseJson) => {\n        setGroupThreads(responseJson);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n      }, [groupId]);\n    \n    return (\n      <div className=\"group-page\">\n\n        <Row gutter={16}>\n            <Col span={24}>\n              <Card title={group.name} bordered>\n                <p>{group.description}</p>\n                <p>Creator: {group.creator}</p>\n                <p>Created: {group.created}</p>\n                <Button size=\"small\" type=\"primary\" onClick={showModal}>Create Thread</Button><br/><br/><br/>\n                <ul>\n        {groupThreads.map(item => {\n          return <Row gutter={16} className=\"group-row\">\n            <Col span={23}>\n              <Card title={item.title} bordered>\n                <Link to={'/threads/'+group.id+'/'+item.id}>\n                <Button size=\"small\" type=\"primary\">Go To Thread</Button><br/>\n                </Link>\n              </Card>\n            </Col>\n          </Row>\n        })}\n      </ul>\n              </Card>\n            </Col>\n          </Row>\n\n          <Modal\n        title=\"Create a new thread!\"\n        visible={isModalVisible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        allowClear=\"true\"\n        footer={[\n            <Button key=\"back\" onClick={handleCancel}>\n              Cancel\n            </Button>\n          ]}\n        >\n          <Form\n      {...layout}\n      name=\"basic\"\n      initialValues={{ remember: true }}\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n    >\n      <Form.Item\n        label=\"Thread Title\"\n        name=\"ThreadTitle\"\n        rules={[{ required: true, message: 'Please input a title!' }]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Thread Content\"\n        name=\"ThreadContent\"\n        rules={[{ required: true, message: 'Please input some content!' }]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item {...tailLayout}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n        </Modal>\n\n          {/* <ul>\n        {groupThreads.map(item => {\n          return <Row gutter={16} className=\"group-row\">\n            <Col span={23}>\n              <Card title={item.title} bordered>\n                <Link to={'/threads/'+group.id+'/'+item.id}>\n                <Button size=\"small\" type=\"primary\">Go To Thread</Button><br/>\n                </Link>\n              </Card>\n            </Col>\n          </Row>\n        })}\n      </ul> */}\n      </div>\n      \n    )\n  };\n  \n  \n  \n  export default GroupPage;","import GroupAPI from \"../services/group-api\";\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Col, Row, Button, Comment, Tooltip, Modal, Input} from 'antd';\nimport \"antd/dist/antd.css\";\n\nconst { Search } = Input;\n\nconst ThreadPage = (props) => {\n\n    const [thread, setThread] = useState([]);\n    const [threadComments, setThreadComments] = useState([]);\n    const threadId = props.match.params.threadId;\n    const groupId = props.match.params.groupId;\n    const [isModalVisible, setIsModalVisible] = useState(false);\n\n    const onChangePostContent = (e) => {\n        GroupAPI.postComment(threadId, e).then(() => {\n          setIsModalVisible(false);\n          refreshPage();\n        });\n    }\n\n    const refreshPage = () => {\n        window.location.reload(false);\n    }\n\n    const showModal = () => {\n        setIsModalVisible(true);\n      };\n\n      const handleOk = (e) => {\n        setIsModalVisible(false);\n      };\n\n      const handleCancel = () => {\n        setIsModalVisible(false);\n      };\n\n    useEffect(() => {\n        GroupAPI.getComments(threadId)\n        .then((responseJson) => {\n        setThreadComments(responseJson);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n      }, [threadId]);\n\n      useEffect(() => {\n        GroupAPI.getThread(groupId, threadId)\n        .then((responseJson) => {\n        setThread(responseJson);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n      }, [threadId, groupId]);\n\n      useEffect(() => {\n        GroupAPI.getComments(threadId)\n        .then((responseJson) => {\n        setThreadComments(responseJson);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n      }, [threadId]);\n\n    return (\n    <div>\n        <div>\n        <Row gutter={16} className=\"group-row\">\n            <Col span={23}>\n              <Card title={thread.title} bordered>\n                <p>{thread.content}</p>\n                <Button type=\"primary\" onClick={showModal}>Add Comment</Button><br/>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n        <Modal\n        title=\"Post a Comment!\"\n        visible={isModalVisible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        allowClear=\"true\"\n        footer={[\n            <Button key=\"back\" onClick={handleCancel}>\n              Cancel\n            </Button>\n          ]}\n        >\n        <Search\n        placeholder=\"Write your comment here!\"\n        enterButton=\"Post\"\n        size=\"large\"\n        onSearch={onChangePostContent}\n        />   \n        </Modal>\n        <ul>\n        {threadComments.map(item => {\n          return <Comment\n          author={item.creator}\n          content={\n            <p>\n              {item.content}\n            </p>\n          }\n          datetime={\n            <Tooltip title={item.created}>\n              <span>{item.created}</span>\n            </Tooltip>\n          }\n        />\n        })}\n      </ul>\n    </div>\n    )\n}\n\nexport default ThreadPage;\n","import React, { useState, useEffect } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport AuthService from \"./services/auth.service\";\n\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Home from \"./components/Home\";\nimport Profile from \"./components/Profile\";\nimport GroupSearch from \"./components/GroupSearch\";\nimport GroupPage from \"./components/Group\";\nimport ThreadPage from \"./components/Thread\";\n\nconst App = () => {\n  const [currentUser, setCurrentUser] = useState(undefined);\n\n  useEffect(() => {\n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      setCurrentUser(user);\n    }\n  }, []);\n\n  const logOut = () => {\n    AuthService.logout();\n    setCurrentUser(undefined);\n  };\n\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n        <Link to={\"/\"} className=\"navbar-brand\">\n          Thread3r\n        </Link>\n        <div className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link to={\"/home\"} className=\"nav-link\">\n              Home\n            </Link>\n            </li>\n            {currentUser && (\n              <li>\n                <Link to={\"/groupsearch\"} className=\"nav-link\">\n                  Groups\n                </Link>\n              </li>\n            )}\n\n        </div>\n\n        {currentUser ? (\n          <div className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/profile\"} className=\"nav-link\">\n                {currentUser.username}\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={\"/login\"} className=\"nav-link\" onClick={logOut}>\n                Log Out\n              </Link>\n            </li>\n          </div>\n        ) : (\n          <div className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/login\"} className=\"nav-link\">\n                Login\n              </Link>\n            </li>\n\n            <li className=\"nav-item\">\n              <Link to={\"/register\"} className=\"nav-link\">\n                Register\n              </Link>\n            </li>\n          </div>\n        )}\n      </nav>\n\n      <div className=\"container mt-3\">\n        <Switch>\n          <Route exact path={[\"/\", \"/home\"]} component={Home} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/profile\" component={Profile} />\n          <Route exact path=\"/groupsearch\" component={GroupSearch} />\n          <Route exact path=\"/groups/:id\" render={(props) => <GroupPage {...props} />} />\n          <Route exact path=\"/threads/:groupId/:threadId\" render={(props) => <ThreadPage {...props} />} />\n        </Switch>\n      </div>\n    </div>\n  );\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n    }\n  }","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.REACT_APP_ROUTER_BASE}>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}